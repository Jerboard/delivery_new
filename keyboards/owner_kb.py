from aiogram.utils.keyboard import InlineKeyboardBuilder, InlineKeyboardMarkup

import db
from data.base_data import company
from enums import OwnerCB, UserRole


# –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –Ω–∞ –∫–Ω–æ–ø–∫–µ —Å—Ç–∞—Ä—Ç
def main_owner_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(text='üìÑ –î–æ–±–∞–≤–∏—Ç—å/–û–±–Ω–æ–≤–∏—Ç—å –∑–∞–∫–∞–∑—ã', callback_data=f'{OwnerCB.UPDATE_TABLE.value}:order')
    kb.button(text='üìÑ –î–æ–±–∞–≤–∏—Ç—å/–û–±–Ω–æ–≤–∏—Ç—å –æ—Ç—á–µ—Ç—ã', callback_data=f'{OwnerCB.UPDATE_TABLE.value}:report')
    kb.button(text='üèÉ –î–æ–±–∞–≤–∏—Ç—å –ö—É—Ä—å–µ—Ä–∞', callback_data=f'{OwnerCB.ADD_USER_1.value}:{UserRole.DLV.value}')
    kb.button(text='üßë‚Äçüíª –î–æ–±–∞–≤–∏—Ç—å –û–ø–µ—Ä–∞—Ç–æ—Ä–∞', callback_data=f'{OwnerCB.ADD_USER_2.value}:{UserRole.OPR.value}:0')
    kb.button(text='üèÉ‚Äç‚ôÇÔ∏è –£–¥–∞–ª–∏—Ç—å –ö—É—Ä—å–µ—Ä–∞', callback_data=f'{OwnerCB.DEL_USER_1.value}:{UserRole.DLV.value}')
    kb.button(text='üôÖ –£–¥–∞–ª–∏—Ç—å –û–ø–µ—Ä–∞—Ç–æ—Ä–∞', callback_data=f'{OwnerCB.DEL_USER_1.value}:{UserRole.OPR.value}')
    kb.button(text='üóí –£ –ö—É—Ä—å–µ—Ä–∞', callback_data=f'{OwnerCB.VIEW_ORDERS_1.value}')
    kb.button(text='üìù –°–º–µ–Ω–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É', callback_data=f'{OwnerCB.CHANGE_TAB.value}')
    kb.button(text='üóí –ë–µ–∑ –ö—É—Ä—å–µ—Ä–∞', callback_data=f'{OwnerCB.VIEW_FREE_ORDERS.value}:0')
    # kb.button(text='üì§ –í—ã–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ', callback_data=f'{OwnerCB.UPDATE_USERS_TABLE_1.value}')
    # kb.button(text='üì• –ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ', callback_data=f'{OwnerCB.UPDATE_USERS_TABLE_2.value}')
    return kb.adjust(1, 1, 2).as_markup()


# —Å–ø–∏—Å–æ–∫ –∫—É—Ä—å–µ—Ä—Å–∫–∏—Ö –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫—É—Ä—å–µ—Ä–∞
def get_add_dlv_comp_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(text='üîô –ù–∞–∑–∞–¥', callback_data=OwnerCB.BACK.value)
    for k, v in company.items():
        kb.button(text=v, callback_data=f'{OwnerCB.ADD_USER_2.value}:{UserRole.DLV.value}:{k}')

    return kb.adjust(1, 2).as_markup()


# –í–ª–∞–¥–µ–ª–µ—Ü –¥–ª—è –∑–∞–∫–∞–∑–æ–≤ –Ω–∞ —Ä—É–∫–∞—Ö
def get_busy_order_own_kb(order_id: int) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(text='–°–Ω—è—Ç—å', callback_data=f'{OwnerCB.MAKE_ORDER_FREE.value}:{order_id}')
    kb.button(text='–ü–µ—Ä–µ–¥–∞—Ç—å', callback_data=f'{OwnerCB.TRANS_ORDER_1.value}:{order_id}')
    return kb.adjust(2).as_markup()


# –∫–Ω–æ–ø–∫–∞ –Ω–∞–∑–Ω–∞—á–∏—Ç—å –∑–∞–∫–∞–∑ –∑–∞–∫–∞–∑–∞
def get_free_order_own_kb(order_id: int) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder ()
    kb.button (text='–ù–∞–∑–Ω–∞—á–∏—Ç—å', callback_data=f'{OwnerCB.TRANS_ORDER_1.value}:{order_id}')
    return kb.as_markup ()


# –≤–µ—Ä–Ω—É—Ç—å –∑–∞–∫–∞–∑ –∫—É—Ä—å–µ—Ä—É
def get_close_order_own_kb(order_id: int, dlv_name: str, user_id: int) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder ()
    kb.button (
        text=f'‚Ü™Ô∏è –í–µ—Ä–Ω—É—Ç—å –∫—É—Ä—å–µ—Ä—É {dlv_name}',
        callback_data=f'{OwnerCB.TRANS_ORDER_2.value}:{user_id}:{order_id}')
    return kb.as_markup ()


# —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ
def get_del_user_kb(users: tuple[db.UserRow], user_role: str) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder ()
    kb.button (text='üîô –ù–∞–∑–∞–¥', callback_data=OwnerCB.BACK.value)
    for user in users:
        kb.button (text=user.name, callback_data=f'{OwnerCB.DEL_USER_2.value}:{user.user_id}:{user_role}')

    return kb.adjust (1, 2).as_markup ()


# —Å–ø–∏—Å–æ–∫ –∫—É—Ä –Ω–∞–∑–Ω–∞—á–∏—Ç—å–∑–∞–∫–∞–∑
def get_trans_orders_users_kb(users: tuple[db.UserRow], order_id: int) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder ()
    kb.button (text='üîô –ù–∞–∑–∞–¥', callback_data=f'{OwnerCB.BACK_FREE.value}:{order_id}')
    for user in users:
        kb.button (text=user.name, callback_data=f'{OwnerCB.TRANS_ORDER_2.value}:{user.user_id}:{order_id}')

    return kb.adjust (1, 2).as_markup ()


# —Å–ø–∏—Å–æ–∫ –∫—É—Ä—å–µ—Ä–æ–≤ –∏ –∏—Ö –∑–∞–∫–∞–∑—ã
def get_orders_users_own_kb(users: tuple[db.OrderGroupRow]) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder ()
    kb.button (text='üîô –ù–∞–∑–∞–¥', callback_data=OwnerCB.BACK.value)
    for user in users:
        kb.button (
            text=f'{user.name} ({user.count_orders})',
            callback_data=f'{OwnerCB.VIEW_ORDERS_2.value}:{user.user_id}')

    return kb.adjust (1, 2).as_markup ()


# –ø—Ä–æ—Å–º–æ—Ç—Ä —Å–≤–æ–±–æ–¥–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤
def get_view_free_order_own_kb(start: int, next_page: bool) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder ()
    start_next = start + 20
    start_back = start - 20
    if start_back >= 0:
        kb.button (text='‚¨ÖÔ∏èÔ∏è –ù–∞–∑–∞–¥', callback_data=f'{OwnerCB.VIEW_FREE_ORDERS.value}:{start_back}')
    if next_page:
        kb.button (text='‚û°Ô∏è –í–ø–µ—Ä—ë–¥', callback_data=f'{OwnerCB.VIEW_FREE_ORDERS.value}:{start_next}')
    return kb.as_markup ()
