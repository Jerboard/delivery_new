from aiogram.utils.keyboard import InlineKeyboardBuilder, InlineKeyboardMarkup

import db
from data.base_data import company_dlv
from enums import BaseCB, OperatorCB, UserRole, OwnerCB, OrderStatus


# –æ—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞
def get_main_opr_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button (text='‚ö™Ô∏è –ë–µ–∑ —Å—Ç–∞—Ç—É—Å–∞', callback_data=f'{OperatorCB.VIEW_ORDER_1.value}:{OrderStatus.NEW.value}')
    kb.button (text='üü¢ –î–æ—Å—Ç–∞–≤–ª–µ–Ω', callback_data=f'{OperatorCB.VIEW_ORDER_1.value}:{OrderStatus.SUC.value}')
    kb.button (text='üü† –û—Ç–ø—Ä–∞–≤–ª–µ–Ω', callback_data=f'{OperatorCB.VIEW_ORDER_1.value}:{OrderStatus.SEND.value}')
    kb.button (text='üü° –ù–∞ —Ä—É–∫–∞—Ö', callback_data=f'{OperatorCB.VIEW_ORDER_1.value}:{OrderStatus.ACTIVE.value}')
    kb.button (text='üî¥ –û—Ç–∫–∞–∑', callback_data=f'{OperatorCB.VIEW_ORDER_1.value}:{OrderStatus.REF.value}')
    kb.button (text='üîµ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–±–æ—Ä', callback_data=f'in_dev')
    return kb.adjust (2).as_markup ()


# –∫—É—Ä—å–µ—Ä—Å–∫–∞—è –¥–ª—è –∑–∞–±–æ—Ä–∞
def take_order_company_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    for comp_id, name in company_dlv.items():
        kb.button(text=name, callback_data=f'{OperatorCB.TAKE_ORDER_1.value}:{comp_id}')

    return kb.adjust(1).as_markup()


# –∫—É—Ä—å–µ—Ä—Å–∫–∞—è –¥–ª—è –∑–∞–±–æ—Ä–∞
def get_take_order_kb(role: str) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data=BaseCB.CLOSE.value)
    if role == UserRole.OPR.value:
        kb.button(text='‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data=OperatorCB.TAKE_ORDER_2.value)
    elif role == UserRole.OWN.value:
        kb.button(text='‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data=OwnerCB.ADD_ORDER.value)
    return kb.as_markup()
