from aiogram.utils.keyboard import InlineKeyboardBuilder, InlineKeyboardMarkup
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

import db
from data.base_data import expensis_dlv, letters
from enums import DeliveryCB, BaseCB, OrderAction, OrderStatus, TypeOrderButton


# –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç
def get_send_contact_kb():
    return ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[
        [KeyboardButton(text='üì± –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä', request_contact=True)]
    ])


# –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –õ–ö –∫—É—Ä—å–µ—Ä–∞
def main_dvl_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(text='üñä –°–º–µ–Ω–∏—Ç—å –∏–º—è', callback_data=DeliveryCB.EDIT_NAME.value)
    kb.button(text='üì± –ú–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', callback_data='in_dev')
    kb.button(text='üìù –û—Ç—á—ë—Ç', callback_data=DeliveryCB.REPORT_1.value)
    kb.button(text='üí∏ –¢—Ä–∞—Ç—ã', callback_data=DeliveryCB.EXPENSES_1.value)
    kb.button(text='üíµ –¢—Ä–∞—Ç—ã —Å–µ–≥–æ–¥–Ω—è', callback_data=DeliveryCB.EXPENSES_VIEW.value)
    return kb.adjust(2).as_markup()


# –∫–ª–∞–≤–∞ –¥–ª—è –∫—É—Ä—å–µ—Ä–∞ —Å–≤–æ–±–æ–¥–Ω—ã–π –∑–∞–∫–∞–∑
def get_free_order_kb(order_id: int, type_order: str, dlv_name: str = None) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    if type_order == TypeOrderButton.BASE.value:
        kb.button(text='üì¶ –í–∑—è—Ç—å –≤ —Ä–∞–±–æ—Ç—É', callback_data=f'{DeliveryCB.ORDER_1.value}:{order_id}')
    elif type_order == TypeOrderButton.TAKE.value:
        kb.button (text='üì¶ –í–∑—è—Ç—å –≤ —Ä–∞–±–æ—Ç—É', callback_data=f'{DeliveryCB.TAKE_ORDER_2.value}:{order_id}')
    else:
        kb.button (text=f'‚≠ïÔ∏è –ó–∞–±—Ä–∞—Ç—å —É –∫—É—Ä—å–µ—Ä–∞ {dlv_name} ‚≠ïÔ∏è',
                   callback_data=f'{DeliveryCB.PICKUP_ORDER_1.value}:{order_id}:conf')
    return kb.adjust (1).as_markup ()


# –∫–ª–∞–≤–∞ –¥–ª—è –∫—É—Ä—å–µ—Ä–∞ —Å–≤–æ–±–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
def get_dlv_main_order_kb(order_id: int, order_status: str) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    if order_status == OrderStatus.ACTIVE.value:
        kb.button(text='‚úÖ –î–æ—Å—Ç–∞–≤–ª–µ–Ω', callback_data=f'{DeliveryCB.ORDER_2.value}:{order_id}')
    else:
        kb.button(text='‚úÖ –ó–∞–±—Ä–∞–ª', callback_data=f'{DeliveryCB.ORDER_7.value}:{order_id}:{OrderAction.SUC_TAKE.value}')

    kb.button(text='‚ùå –û—Ç–∫–∞–∑', callback_data=f'{DeliveryCB.REF_ORDER_1.value}:{order_id}')

    # if order_status == OrderStatus.ACTIVE.value:
    kb.button(
        text='‚úñÔ∏è –ö–ª–∏–µ–Ω—Ç –Ω–µ —è–≤–∏–ª—Å—è',
        callback_data=f'{DeliveryCB.ORDER_4.value}:{order_id}:{OrderAction.NOT_COME.value}:d'
        # callback_data=f'{DeliveryCB.ORDER_7.value}:{order_id}:{OrderAction.NOT_COME.value}'
    )
    kb.button(text='‚Ü©Ô∏è –ü–µ—Ä–µ–¥–∞—Ç—å –¥—Ä—É–≥–æ–º—É –∫—É—Ä—å–µ—Ä—É', callback_data=f'{DeliveryCB.ORDER_3.value}:{order_id}')
    return kb.adjust(1).as_markup()


# –æ—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –∑–∞–∫–∞–∑–∞
def get_close_order_option_kb(order_id: int) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(
        text='‚úÖ –ó–∞–∫—Ä—ã—Ç—å –∑–∞–∫–∞–∑',
        callback_data=f'{DeliveryCB.ORDER_7.value}:{order_id}:{OrderAction.SUC.value}')
    kb.button(
        text='üñç –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å',
        callback_data=f'{DeliveryCB.ORDER_6.value}:{OrderAction.COST.value}:{order_id}')
    kb.button(
        text='üñç –ò–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—É –¥–æ—Å—Ç–∞–≤–∫–∏',
        callback_data=f'{DeliveryCB.ORDER_6.value}:{OrderAction.DELI.value}:{order_id}')
    kb.button(text='üîô –ù–∞–∑–∞–¥', callback_data=f'{DeliveryCB.BACK_MAIN_ORDER.value}:{order_id}')
    return kb.adjust(1).as_markup()


# –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∑–∞–∫—Ä—ã—Ç–∏—é –∑–∞–∫–∞–∑–∞
def get_back_close_order_kb(order_id: int) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(text='üîô –ù–∞–∑–∞–¥', callback_data=f'{DeliveryCB.BACK_CLOSE_ORDER.value}:{order_id}')
    return kb.adjust(1).as_markup()


# –≤—ã–±—Ä–∞—Ç—å –±—É–∫–≤—É –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –∑–∞–∫–∞–∑–∞
def get_done_order_letters_kb(order_id: int, order_action: str) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    for k, v in letters.items ():
        kb.button (text=v, callback_data=f'{DeliveryCB.ORDER_4.value}:{order_id}:{order_action}:{k}')
    kb.button(text='üîô –ù–∞–∑–∞–¥', callback_data=f'{DeliveryCB.BACK_CLOSE_ORDER.value}:{order_id}')
    return kb.adjust(1).as_markup()


# –∫–Ω–æ–ø–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –û—Ç–∫–∞–∑–∞ –æ—Ç –∑–∞–∫–∞–∑–∞
def get_pickup_order_kb(order_id: int) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(text='‚úÖ –ó–∞–±—Ä–∞—Ç—å', callback_data=f'{DeliveryCB.PICKUP_ORDER_2.value}:{order_id}')
    # kb.button(text='‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data=f'{DeliveryCB.PICKUP_ORDER_2.value}:{order_id}')
    kb.button(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data=f'{DeliveryCB.PICKUP_ORDER_1.value}:{order_id}:back')
    return kb.adjust(1).as_markup()


# –≤—ã–±—Ä–∞—Ç—å –±—É–∫–≤—É –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–ø
def get_expensis_let_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    for k, v in letters.items():
        kb.button (text=v, callback_data=f'{DeliveryCB.EXPENSES_5.value}:{k}')

    kb.button (text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data=BaseCB.CLOSE.value)
    return kb.adjust(1).as_markup()


# –∫–Ω–æ–ø–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –û—Ç–∫–∞–∑–∞ –æ—Ç –∑–∞–∫–∞–∑–∞
def get_close_order_kb(order_id: int) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(text='‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ—Ç–∫–∞–∑', callback_data=f'{DeliveryCB.REF_ORDER_2.value}:{order_id}')
    kb.button(text='üîô –ù–∞–∑–∞–¥', callback_data=f'{DeliveryCB.BACK_MAIN_ORDER.value}:{order_id}')
    return kb.adjust(1).as_markup()


# –ø–µ—Ä–µ–¥–∞—Ç—å –∑–∞–∫–∞–∑
def get_transfer_order_kb(users: tuple[db.UserRow], order_id) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(text='üîô –ù–∞–∑–∞–¥', callback_data=f'{DeliveryCB.BACK_MAIN_ORDER.value}:{order_id}')
    for user in users:
        kb.button(text=user.name, callback_data=f'{DeliveryCB.TRANS_ORDER.value}:{user.user_id}:{order_id}')

    return kb.adjust(1, 2).as_markup()


# –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ç—Ä–∞—Ç –∫—É—Ä—å–µ—Ä–∞
def expenses_dvl_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()

    kb.button (text='üîô –ù–∞–∑–∞–¥', callback_data=DeliveryCB.BACK_MAIN.value)
    for k, v in expensis_dlv.items():
        if k == 1:
            kb.button(text=f'{v["emoji"]} {v["text"]}', callback_data=f'{DeliveryCB.EXPENSES_5.value}:start')
        else:
            kb.button(text=f'{v["emoji"]} {v["text"]}', callback_data=f'{DeliveryCB.EXPENSES_2.value}:{k}')
        # kb.button(text=f'üí∏ {name}', callback_data=f'{DeliveryCB.EXPENSES_2.value}:{column}')

    return kb.adjust(1, 2).as_markup()


# –¥–Ω–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Ç—á—ë—Ç–∞
def report_view_days_kb(report_rows: tuple[db.ReportRow]) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(text='–°–µ–≥–æ–¥–Ω—è', callback_data=f'{DeliveryCB.REPORT_2.value}:today')
    kb.button(text='üîô –ù–∞–∑–∞–¥', callback_data=f'{DeliveryCB.BACK_MAIN.value}')

    for day_row in report_rows:
        kb.button(text=day_row.m, callback_data=f'{DeliveryCB.REPORT_2.value}:{day_row.m}')
    return kb.adjust(2).as_markup()


# –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á—ë—Ç
def get_day_report_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder ()
    kb.button (text='üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á—ë—Ç', callback_data=f'{DeliveryCB.REPORT_4.value}')
    kb.button (text='üí∏ –í–Ω–µ—Å—Ç–∏ —Ç—Ä–∞—Ç—É', callback_data=f'{DeliveryCB.EXPENSES_1.value}')
    return kb.adjust(1).as_markup()


# –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á—ë—Ç
def get_send_day_report_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button (text='üîô –ù–∞–∑–∞–¥', callback_data=f'{DeliveryCB.BACK_MAIN.value}')
    kb.button(text='üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á—ë—Ç', callback_data=DeliveryCB.REPORT_3.value)
    return kb.adjust(1).as_markup()


# –ø–æ—á—Ç–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã
def get_post_order_kb(order_id: int, order_status) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder ()
    if order_status == OrderStatus.ACTIVE.value:
        kb.button (text='üìØ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω', callback_data=f'{DeliveryCB.POST_1.value}:{order_id}')
    elif order_status == OrderStatus.SEND.value:
        kb.button (
            text='‚úÖ –î–æ—Å—Ç–∞–≤–ª–µ–Ω',
            callback_data=f'{DeliveryCB.ORDER_4.value}:{order_id}:{OrderAction.SUC.value}:del'
        )
        kb.button (text='‚ùå –û—Ç–∫–∞–∑', callback_data=f'{DeliveryCB.POST_2.value}:{order_id}')

    return kb.adjust (1).as_markup ()
